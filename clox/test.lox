fun outer() {
    // var x = "test inner";
  // fun inner() {
    // print 123;
   // }
  // inner();
  print 123;
}
outer();

// fun foo() {}
// print foo; // expect: <fn foo>

// print clock; // expect: <native fn>

class Brioche {}
print Brioche;

print Brioche();

class Pair {}

class Brunch {
  bacon() {}
  eggs() {}
}

var pair = Pair();
pair.first = 1;
pair.second = 2;
print pair.first + pair.second; // 3.

var a = "hello ";
var b = "world!";
var hello = a + b;
print hello;
print 123;

class Scone {
  topping(first, second) {
    print "scone with " + first + " and " + second;
  }
}

var scone = Scone();
scone.topping("berries", "cream");

class Nested {
  method() {
    fun function() {
      print this;
    }

    function();
  }
}

Nested().method();
